
services:
  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: ace-php
    depends_on:
      - database
      - redis
    environment:
      APP_ENV: ${APP_ENV:-dev}
      DATABASE_URL: ${DATABASE_URL:-postgresql://root:ace123123@database:5432/ace?serverVersion=16&charset=utf8}
      REDIS_URL: ${REDIS_URL:-redis://redis:6379}
      # Xdebug 远程调试配置
      XDEBUG_MODE: debug,develop
      XDEBUG_CLIENT_HOST: host.docker.internal
      XDEBUG_CLIENT_PORT: 9003
      XDEBUG_START_WITH_REQUEST: yes
    volumes:
      - ./:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/custom.ini:ro
    working_dir: /var/www/html
    restart: unless-stopped

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-ace}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ace123123}
      POSTGRES_USER: ${POSTGRES_USER:-root}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-ace}", "-U", "${POSTGRES_USER:-root}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###
  nginx:
    image: nginx:stable-alpine
    container_name: ace-nginx
    depends_on:
      - php
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: ace-redis
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
